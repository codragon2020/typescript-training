{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA,GAAA,YAAA;ACLA,ADQC,ICRK,IAAI,GAAG,ADQZ,ICRgB,ADQhB,CAAoB,IAApB,CCRgB,CAAA,ADQmB,ICRvB,CAAS;AAAE,ADQH,ECRG,IAAI,EAAE,CDQT,IAAA,GCRC,ADQD,IAAA;ACRmB,ADMvC,ECNuC,GAAG,EAAE,EDM5C,MAAA,GAAwC,EAAxC;ACNqB,ADQkB,CCR3B,CAAb;AAEA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AACd,ADOH,ECPG,ADOH,IAAA,CAAA,ECPU,CAAC,GAAR,CAAY,EDOf,CAAA,GAAA,GAAA,ECPG,QDOC,QAAJ,EAAoB;ACNpB,ADOC,CCTF,UDSS,KAAK,IAAL,CAAU,QAAV,CAAP;ACNF,ADOE,GAFD,CCLG,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AACd,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACH,ADOA,CCTD,CDSC,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;ACNtB,ADOE,ICPE,ADOF,CCPG,EAAL,CAAQ,EDOA,CAAC,GCPT,EAAgB,CDOd,CAAc,KAAK,IAAnB,CCPc,CDOW,MAAzB;ACNE,ADOF,ECPE,CDKH,MCLU,CAAC,GAAR,CAAY,oBAAZ;AACH,CAFD;AAIA,ADMC,EAAA,ECNG,CAAC,CDMJ,CAAA,KCND,CAAa,GDMZ,CAAA,EAAA,ECND,CDMC,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACvC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACM,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACH,GAJJ;;AAMG,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACrB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACpC;AACH;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACrB,MAAA,QAAQ;AACX,KAFD;AAGH,GAVD;;AAWJ,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n\tname?: string;\r\n\tage?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n\tevents: { [key: string]: Callback[] } = {};\r\n\r\n\tconstructor(private data: UserProps) {}\r\n\r\n\tget(propName: string): number | string {\r\n\t\treturn this.data[propName];\r\n\t}\r\n\r\n\tset(update: UserProps): void {\r\n\t\tObject.assign(this.data, update);\r\n\t}\r\n\r\n\ton(eventName: string, callback: Callback): void {\r\n\t\tconst handlers = this.events[eventName] || [];\r\n        handlers.push(callback)\r\n        this.events[eventName] = handlers\r\n    }\r\n\r\n    trigger(eventName: string): void {\r\n        const handlers = this.events[eventName]\r\n\r\n        if (!handlers || handlers.length === 0) {\r\n            return\r\n        }\r\n\r\n        handlers.forEach(callback => {\r\n            callback()\r\n        })\r\n    }\r\n}\r\n","import { User } from \"./models/User\";\r\n\r\nconst user = new User({ name: 'myname', age: 20 })\r\n\r\nuser.on('change', () => {\r\n    console.log('Change #1')\r\n})\r\nuser.on('change', () => {\r\n    console.log('Change #2')\r\n})\r\nuser.on('save', () => {\r\n    console.log('Save was triggered')\r\n})\r\n\r\nuser.trigger('change')"]}